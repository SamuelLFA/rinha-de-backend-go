version: '3.5'
services:
  db: # Database
    container_name: db
    image: postgres:15.4
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1.5GB'

  api1: # API - Instância 01
    build:
      dockerfile: ./Dockerfile
    depends_on:
      db:
        condition: service_healthy
    image: api
    hostname: api1
    expose:
      - "80"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  api2: # API - Instância 01
    image: api
    depends_on:
      db:
        condition: service_healthy
    build:
      dockerfile: ./Dockerfile
    hostname: api2
    expose:
      - "80"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
